name: "ðŸ§ª Instrumentation Test"

on:
  workflow_call:
    inputs:
      script:
        required: true
        type: string
        description: |
          Lines of script to execute while the emulator is running.
          Usually this is a `gradlew connectedCheck` command in some form.
          Multiple lines are allowed, but due to reactivecircus/android-emulator-runner's behavior
          each line will be executed separately, so no backslashes at end of lines.
          Note: in yaml, you can still use > to write multiple lines that end up as a single-line string.
      android-api:
        required: true
        type: number
        description: "Android API level to run the tests on. See https://apilevels.com/. [14, ..., 34]"
      android-image-type:
        required: false
        type: string
        default: ${{ inputs.android-api >= 32 && 'google_apis' || 'default' }}
        description: |
          Android emulator image type to run the tests on.
          Run `sdkmanager --list | grep "system-images;android-"` to see what's available.
          Some types for certain API levels are not available: https://issuetracker.google.com/issues/267458959
          Potential values:
           * default
           * google_apis
           * google_apis_playstore
           * google-tv
           * android-desktop
           * android-tv
      # Nowadays with AndroidX libraries having API 14 as minimum,
      # API 15 is the first possible emulator that works well on GitHub Actions' architectures:
      # > system-images;android-10;default;armeabi-v7a
      # > system-images;android-10;default;x86
      # > system-images;android-14;default;armeabi-v7a
      # > system-images;android-15;default;armeabi-v7a
      # > system-images;android-15;default;x86
      android-image-arch:
        required: false
        type: string
        default: ${{ inputs.android-api >= 21 && 'x86_64' || 'x86' }}
        description: |
          Android emulator image architecture.
          Run `sdkmanager --list | grep "system-images;android-"` to see what's available.
          Potential values:
            armeabi-v7a
            arm64-v8a
            x86
            x86_64
      timeout-minutes:
        required: false
        type: number
        default: 30
        description: |
          Number of minutes to wait for the `inputs.script` to finish running on the emulator.
          Might be slightly less because installing, configuring and starting up the emulator might take minutes. 
      java-version:
        required: false
        type: number
        default: 17
        description: |
          See actions/setup-java's java-version. Will use zulu distribution.
      junit5:
        required: false
        type: boolean
        default: false
        description: |
          Whether the instrumentation is running JUnit 5 or not.
          Android-JUnit 5 uses Java 8, so it's only possible to use from API 26 onwards.
          This makes no behavioral change yet to any of the steps (yet).
      name-artifact-fine-grained:
        required: false
        type: string
        default: 'Instrumentation Test Results {0}'
        description: |
          Format string for the name of the artifact to be uploaded to GitHub.
          Use {0} to represent `inputs.android-api`.
          Use {1} to represent `inputs.android-image-type`.
          Use {2} to represent `inputs.android-image-arch`.
      name-artifact-merged:
        required: false
        type: string
        default: 'Instrumentation Merged Results {0}'
        description: |
          Format string for the name of the artifact to be uploaded to GitHub.
          Use {0} to represent `inputs.android-api`.
          Use {1} to represent `inputs.android-image-type`.
          Use {2} to represent `inputs.android-image-arch`.
      name-check-results:
        required: false
        type: string
        default: 'ðŸ”” Test: Instrumentation Results {0}'
        description: |
          Format string for the name of the check suite created in the workflow run.
          Use {0} to represent `inputs.android-api`.
          Use {1} to represent `inputs.android-image-type`.
          Use {2} to represent `inputs.android-image-arch`.
      name-check-gradle:
        required: false
        type: string
        default: 'CI / Instrumentation Tests {0} / Gradle'
        description: |
          Format string for the name of the check suite created in the workflow run.
          Use {0} to represent `inputs.android-api`.
          Use {1} to represent `inputs.android-image-type`.
          Use {2} to represent `inputs.android-image-arch`.
#    secrets:
#      token:
#        required: true
#        description: "GitHub token with access to the calling repository."

jobs:
  android:
    name: "API ${{ inputs.android-api }}"
    runs-on: macos-latest
    timeout-minutes: ${{ inputs.timeout-minutes }}

    permissions:
      # actions/checkout
      contents: read
      # EnricoMi/publish-unit-test-result-action -> https://github.com/EnricoMi/publish-unit-test-result-action#permissions
      checks: write

    steps:

      - name: "Set up Java ${{ inputs.java-version }}."
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.java-version }}
          distribution: zulu

      - name: "Checkout ${{ github.ref }} branch in ${{ github.repository }} repository."
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: "Run Instrumentation Tests on emulator."
        id: gradle
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ inputs.android-api }}
          target: ${{ inputs.android-image-type }}
          arch: ${{ inputs.android-image-arch }}
          profile: pixel
          # Ensure that /storage/sdcard exists, without this the stock DocumentsUI will be non-functional.
          sdcard-path-or-size: 100M
          script: |
            adb devices -l
            ${{ inputs.script }}

      - name: "Publish 'Gradle' result and Build Scan URL."
        if: (success() || failure()) && steps.gradle != null && steps.gradle.outputs.result-success != null
        uses: actions/github-script@v6
        with:
          debug: ${{ secrets.ACTIONS_STEP_DEBUG || false }}
          script: |
            const description = ${{ toJSON(fromJSON(steps.gradle.outputs.result-text)) }}
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: ${{ toJSON(fromJSON(steps.gradle.outputs.result-success)) }} === true ? "success" : "failure",
              context: "${{ format(inputs.name-check-gradle, inputs.android-api, inputs.android-image-type, inputs.android-image-arch) }}",
              // Truncate to be sure it fits:
              // > HttpError: Validation Failed: {"resource":"Status","code":"custom",
              // > "field":"description","message":"description is too long (maximum is 140 characters)"}
              // Max length is 140, give some space for potential Unicode.
              description: description.length > 130
                  ? `${description.substring(0, 130)}â€¦`
                  : description,
              target_url: ${{ steps.gradle.outputs.build-scan-url && toJSON(fromJSON(steps.gradle.outputs.build-scan-url)) || 'undefined' }}
            });

      - name: "Upload '${{ format(inputs.name-artifact-fine-grained, inputs.android-api, inputs.android-image-type, inputs.android-image-arch) }}' artifact."
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: '${{ format(inputs.name-artifact-fine-grained, inputs.android-api, inputs.android-image-type, inputs.android-image-arch) }}'
          # Exclude names with colon: https://issuetracker.google.com/issues/223643506
          path: |
            ${{ github.workspace }}/**/build/reports/androidTests/connected/
            ${{ github.workspace }}/**/build/outputs/androidTest-results/connected/
            ${{ github.workspace }}/**/build/outputs/connected_android_test_additional_output/
            !**/*:*

      - name: "Upload '${{ format(inputs.name-artifact-merged, inputs.android-api, inputs.android-image-type, inputs.android-image-arch) }}' artifact."
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: '${{ format(inputs.name-artifact-merged, inputs.android-api, inputs.android-image-type, inputs.android-image-arch) }}'
          # Exclude names with colon: https://issuetracker.google.com/issues/223643506
          path: |
            ${{ github.workspace }}/build/androidTest-results/
            !**/*:*

      - name: "Publish '${{ format(inputs.name-check-results, inputs.android-api, inputs.android-image-type, inputs.android-image-arch) }}' check suite."
        if: success() || failure()
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        with:
          check_name: '${{ format(inputs.name-check-results, inputs.android-api, inputs.android-image-type, inputs.android-image-arch) }}'
          comment_mode: off
          report_individual_runs: true
          test_changes_limit: 0
          junit_files: ${{ github.workspace }}/**/build/outputs/androidTest-results/connected/TEST-*.xml
